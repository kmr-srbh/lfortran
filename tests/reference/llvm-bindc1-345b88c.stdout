; ModuleID = 'LFortran'
source_filename = "LFortran"

@c_bool = external global i32
@c_char = external global i32
@c_double = external global i32
@c_double_complex = external global i32
@c_float = external global i32
@c_float_complex = external global i32
@c_int = external global i32
@c_int16_t = external global i32
@c_int32_t = external global i32
@c_int64_t = external global i32
@c_int8_t = external global i32
@c_long = external global i32
@c_long_double = external global i32
@c_long_double_complex = external global i32
@c_long_long = external global i32
@0 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@c_null_char = external global i8*
@c_null_ptr = external global void*
@c_short = external global i32
@c_size_t = external global i32

define i32 @main(i32 %0, i8** %1) {
.entry:
  call void @_lpython_call_initial_functions(i32 %0, i8** %1)
  %p = alloca void*, align 8
  %x = alloca i32*, align 8
  store i32* null, i32** %x, align 8
  %2 = load i32*, i32** %x, align 8
  %3 = bitcast i32* %2 to void*
  store void* %3, void** %p, align 8
  br label %return

return:                                           ; preds = %.entry
  ret i32 0
}

declare void @_lpython_call_initial_functions(i32, i8**)
